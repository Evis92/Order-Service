name: ci tag and push

on:
  push:
    branches:
      - main

jobs:
  tag-and-push:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set Image Tag Name
      - name: Set Image Tag
        run: echo "TAG_NAME=v$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.ORDERSERVICE_SECRET }}

      # Step 4: Build Docker Image
      - name: Build Docker Image
        run: |
          IMAGE_NAME="evis92/order-service"
          docker build -t $IMAGE_NAME:${{ env.TAG_NAME }} -f ./OrderService.Api/Dockerfile .

      # Step 5: Push Docker Image to Registry
      - name: Push Docker Image
        run: |
          IMAGE_NAME="orderservice"
          docker push $IMAGE_NAME:${{ env.TAG_NAME }}

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out code
#         uses: actions/checkout@v3

#       - name: Set up Docker Compose
#         run: |
#           sudo apt-get update
#           sudo apt-get install docker-compose

#       - name: Build and start services with Docker Compose
#         run: docker-compose -f docker-compose.yml up -d --build

#       - name: Run application container
#         run: |
#           echo "Application container is running. Here is the list of active containers:"
#           docker ps

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ vars.DOCKER_USERNAME }}
#           password: ${{ secrets.ORDERSERVICE_SECRET }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3

#       - name: Convert repo name to lowercase
#         id: repo_name
#         run: echo "REPO_NAME=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

#       - name: Build and push
#         uses: docker/build-push-action@v6
#         with:
#           file: ./OrderService.Api/Dockerfile
#           platforms: linux/amd64,linux/arm64
#           push: true
#           target: final
#           tags: ${{ vars.DOCKER_ORDERSERVICE }}/${{ env.REPO_NAME }}:latest
